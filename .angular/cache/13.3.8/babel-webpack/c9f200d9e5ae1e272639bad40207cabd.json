{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport { UohSpinner } from '@uoh/ngx-theme';\nimport * as i0 from \"@angular/core\";\nexport let SpinnerInterceptor = /*#__PURE__*/(() => {\n  class SpinnerInterceptor {\n    /**\r\n     * ApiInterceptor constructor\r\n     *\r\n     * @param injector\r\n     */\n    constructor(injector) {\n      this.injector = injector;\n    }\n    /**\r\n     * Get injected UohSpinner\r\n     */\n\n\n    get spinner() {\n      return this.injector.get(UohSpinner);\n    }\n    /**\r\n     *\r\n     * @param request\r\n     * @param next\r\n     * @returns {Ovservable<any>}\r\n     */\n\n\n    intercept(request, next) {\n      const clone = request.clone();\n      const headers = clone.headers;\n      const shouldSpin = headers.get(SpinnerInterceptor.SHOULD_SPIN_HEADER);\n\n      if (shouldSpin === 'true') {\n        this.spinner.add();\n      }\n\n      return next.handle(clone).pipe(finalize(() => {\n        if (shouldSpin === 'true') {\n          this.spinner.remove();\n        }\n      }));\n    }\n\n  }\n\n  SpinnerInterceptor.SHOULD_SPIN_HEADER = 'Interceptor-Spinner-Should-Spin';\n\n  SpinnerInterceptor.ɵfac = function SpinnerInterceptor_Factory(t) {\n    return new (t || SpinnerInterceptor)(i0.ɵɵinject(i0.Injector));\n  };\n\n  SpinnerInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SpinnerInterceptor,\n    factory: SpinnerInterceptor.ɵfac\n  });\n  return SpinnerInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}