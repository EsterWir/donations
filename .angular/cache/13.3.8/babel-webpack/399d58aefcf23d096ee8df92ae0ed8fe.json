{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@haifauniversity/ngx-tools\";\nimport * as i2 from \"@haifauniversity/ngx-pay\";\nimport * as i3 from \"./payment-query.service\";\nimport * as i4 from \"./payment-store.service\";\nexport let PaymentService = /*#__PURE__*/(() => {\n  class PaymentService {\n    constructor(platform, pay, query, store) {\n      this.platform = platform;\n      this.pay = pay;\n      this.query = query;\n      this.store = store;\n    }\n\n    get payment$() {\n      return this.pay.payment$;\n    }\n\n    isValidPayment() {\n      return !!this.pay.payment.status && !!this.pay.payment.receivedAt && !!this.pay.payment.confirmationCode;\n    }\n\n    attemptPayment(userFormData) {\n      const body = {\n        platform: this.platform.getInfo(),\n        userFormData\n      };\n      return this.query.postAttempt(body).pipe(tap(data => {\n        this.store.setProductData(data.product);\n        this.store.setCheckoutData(data.checkout);\n        this.store.setFormData(userFormData);\n      }));\n    }\n\n    completePayment() {\n      var _a;\n\n      const token = ((_a = this.store.getCheckoutData()) === null || _a === void 0 ? void 0 : _a.token) || \"\";\n      return this.query.postComplete({\n        token\n      }).pipe(tap(({\n        status\n      }) => {\n        if (status === 'OK' || status === 'PARTIAL') {\n          this.store.completePayment();\n        }\n      }));\n    }\n\n  }\n\n  PaymentService.ɵfac = function PaymentService_Factory(t) {\n    return new (t || PaymentService)(i0.ɵɵinject(i1.UohPlatform), i0.ɵɵinject(i2.UohPay), i0.ɵɵinject(i3.PaymentQueryService), i0.ɵɵinject(i4.PaymentStoreService));\n  };\n\n  PaymentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaymentService,\n    factory: PaymentService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaymentService;\n})();","map":null,"metadata":{},"sourceType":"module"}