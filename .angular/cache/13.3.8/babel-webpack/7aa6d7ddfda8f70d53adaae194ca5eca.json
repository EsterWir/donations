{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { UserType } from './user-info-store.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./user-info-query.service\";\nimport * as i2 from \"./user-info-store.service\";\nexport let UserInfoService = /*#__PURE__*/(() => {\n  class UserInfoService {\n    constructor(query, store) {\n      this.query = query;\n      this.store = store;\n      this.status = new BehaviorSubject(false);\n      this.status$ = this.status.asObservable();\n    }\n\n    isStudent() {\n      return this.store.type === UserType.STUDENT;\n    }\n\n    isGuest() {\n      return this.store.type === UserType.GUEST;\n    }\n\n    init() {\n      return this.query.get().pipe(tap(data => {\n        this.store.setUserInfo(data);\n        this.status.next(true);\n      }));\n    }\n\n  }\n\n  UserInfoService.ɵfac = function UserInfoService_Factory(t) {\n    return new (t || UserInfoService)(i0.ɵɵinject(i1.UserInfoQueryService), i0.ɵɵinject(i2.UserInfoStoreService));\n  };\n\n  UserInfoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserInfoService,\n    factory: UserInfoService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserInfoService;\n})();","map":null,"metadata":{},"sourceType":"module"}